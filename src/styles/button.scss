$button-colors: (
  primary: (
    enable: (
      background-color: var(--button-color-primary-enable-background-color),
      color: var(--button-color-primary-enable-color),
      border-color: var(--button-color-primary-enable-border-color)
    ),
    hover: (
      background-color: var(--button-color-primary-hover-background-color),
      color: var(--button-color-primary-hover-color),
      border-color: var(--button-color-primary-hover-border-color)
    ),
    focus: (
      background-color: var(--button-color-primary-focus-background-color),
      color: var(--button-color-primary-focus-color),
      border-color: var(--button-color-primary-focus-border-color)
    ),
    active: (
      background-color: var(--button-color-primary-active-background-color),
      color: var(--button-color-primary-active-color),
      border-color: var(--button-color-primary-active-border-color)
    ),
    disabled: (
      background-color: var(--button-color-primary-disabled-background-color),
      color: var(--button-color-primary-disabled-color),
      border-color: var(--button-color-primary-disabled-border-color)
    )
  )
);

$button-sizes: (
  default: (
    height: var(--button-size-default-size-height),
    border-radius: var(--button-size-default-border-radius),
    border-width: var(--button-size-default-border-width),
    font-size: var(--button-size-default-font-size),
    font-weight: var(--button-size-default-font-weight),
    padding-top: var(--button-size-default-spacing-padding-top),
    padding-right: var(--button-size-default-spacing-padding-right),
    padding-bottom: var(--button-size-default-spacing-padding-bottom),
    padding-left: var(--button-size-default-spacing-padding-left),
    gap: var(--button-size-default-spacing-gap)
  )
);


$component: tp-button;

.#{$component} {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;

  // colors styles
  @each $key, $value in $button-colors {
    &.#{$component}--primary {
      color: map-deep-get($value, 'disabled', 'color');
      background-color: map-deep-get($value, 'disabled', 'background-color');
      border-color: map-deep-get($value, 'disabled', 'border-color');

      &:not(:disabled) {
        color: map-deep-get($value, 'enable', 'color');
        background-color: map-deep-get($value, 'enable', 'background-color');
        border-color: map-deep-get($value, 'enable', 'border-color');

        @media(hover: hover) {
          &:hover {
            color: map-deep-get($value, 'hover', 'color');
            background-color: map-deep-get($value, 'hover', 'background-color');
            border-color: map-deep-get($value, 'hover', 'border-color');
          }
  
          &:focus {
            color: map-deep-get($value, 'focus', 'color');
            background-color: map-deep-get($value, 'focus', 'background-color');
            border-color: map-deep-get($value, 'focus', 'border-color');
          }
  
          &:active {
            color: map-deep-get($value, 'active', 'color');
            background-color: map-deep-get($value, 'active', 'background-color');
            border-color: map-deep-get($value, 'active', 'border-color');
          }
        }
      }
    }
  }

  // sizes styles
  @each $key, $value in $button-sizes {
    font-size: map-deep-get($value, 'font-size');
    font-weight: map-deep-get($value, 'font-weight');
    height: map-deep-get($value, 'height');
    padding-right: map-deep-get($value, 'padding-right');
    padding-left: map-deep-get($value, 'padding-left');
    border-radius: map-deep-get($value, 'border-radius');
    border-width: map-deep-get($value, 'border-width');
    column-gap: map-deep-get($value, 'gap');
  }
}